name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  syntax-check:
    name: Syntax and Style Check
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install ruff black mypy
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi

    - name: Check Python syntax (compilation)
      run: |
        # Compile all Python files to check syntax
        find . -name "*.py" -not -path "./.direnv/*" -not -path "./venv/*" \
          -exec python -m py_compile {} \;

    - name: Check code formatting with Black
      run: black --check --diff .

    - name: Lint with Ruff
      run: ruff check .

    - name: Type check with MyPy
      run: mypy . --ignore-missing-imports || true  # Don't fail on missing type stubs

  test:
    name: Tests
    runs-on: ubuntu-latest
    needs: syntax-check  # Only run tests if syntax check passes

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          qt6-base-dev \
          qt6-tools-dev \
          libgl1-mesa-glx \
          xvfb

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi

    - name: Compile Qt resources
      run: |
        if [ -f resources/resources.qrc ]; then
          pyside6-rcc resources/resources.qrc -o resources/resources_rc.py
        fi

    - name: Run unit tests
      run: |
        pytest tests/unit/ -v --tb=short

    - name: Run GUI tests (headless)
      run: |
        xvfb-run -a pytest tests/gui/ -v --tb=short

    - name: Run integration tests
      run: |
        pytest tests/integration/ -v --tb=short || true  # Allow failures for now

  build-check:
    name: Build Check
    runs-on: ubuntu-latest
    needs: [syntax-check, test]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Compile Qt resources
      run: |
        if [ -f resources/resources.qrc ]; then
          pyside6-rcc resources/resources.qrc -o resources/resources_rc.py
        fi

    - name: Test application startup
      run: |
        timeout 10s python main.py --test-mode --no-confirm || true
        echo "App startup test completed"